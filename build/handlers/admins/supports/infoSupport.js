"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.supportInfo = exports.composer = void 0;
const grammy_1 = require("grammy");
const database_1 = require("../../../database");
const getUsername_1 = require("../../../helpers/getUsername");
const regex = /\/admin\s+support\s+(?<tgid>\d+)/gmi;
exports.composer = new grammy_1.Composer();
exports.composer.hears(regex, supportInfo);
exports.composer.callbackQuery(regex, supportInfo);
async function supportInfo(ctx) {
    let match;
    if (ctx?.callbackQuery?.data) {
        await ctx.answerCallbackQuery();
        match = regex.exec(ctx.callbackQuery.data);
    }
    else {
        match = regex.exec(ctx.match[0]);
    }
    const id = match.groups.tgid;
    const support = await database_1.supportsRepository.findOne({
        relations: { user: true },
        where: {
            user: {
                tgId: Number(id)
            }
        }
    });
    if (!support) {
        return ctx.reply(`–¢–ü—à–µ—Ä–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: 'üçÄ –°–æ–∑–¥–∞—Ç—å', callback_data: `admin support create ${id}` }],
                    [{ text: '–ó–∞–∫—Ä—ã—Ç—å', callback_data: `deleteThisMessage` }]
                ]
            }
        });
    }
    const user = await database_1.userRepository.findOne({
        where: {
            tgId: Number(id)
        }
    });
    if (!user) {
        return ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –µ—Å—Ç—å –≤ —Ç–∞–±–ª–∏—Ü–µ –¢–ü—à–µ—Ä–æ–≤))) –∫–æ–¥–µ—Ä—É –≤ –ª—Å –Ω–∞–ø–∏—à–∏—Ç–µ –ø–∂)`, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–ó–∞–∫—Ä—ã—Ç—å', callback_data: `deleteThisMessage` }]
                ]
            }
        });
    }
    return ctx.reply(`
üê® –¢–ü—à–µ—Ä: ${await (0, getUsername_1.getUsername)(support.user, true)} || ${support.percent}%

üå≥ –ü—Ä–æ—Ü–µ–Ω—Ç: ${support.percent}%
üå≥ –ê–∫—Ç–∏–≤–Ω—ã–π: ${(support.active) ? '–î–∞' : '–ù–µ—Ç'}
üå≥ Smartsupp –∫–æ–¥: <code>${support.code}</code>

üå≥ –û–ø–∏—Å–∞–Ω–∏–µ: ${support.description}
    `, {
        reply_markup: {
            inline_keyboard: [
                [{ text: `${(support.active) ? "ü™´ –û—Ç–∫–ª—é—á–∏—Ç—å" : "üîã –í–∫–ª—é—á–∏—Ç—å"}`, callback_data: `support change status ${support.id}` }],
                [{ text: "ü™µ –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç", callback_data: `support change percent ${support.id}` }],
                [{ text: "üåø –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ", callback_data: `support change description ${support.id}` }],
                [{ text: "üå≥ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–¥", callback_data: `support change code ${support.id}` }],
                [{ text: "–ó–∞–∫—Ä—ã—Ç—å", callback_data: `deleteThisMessage` }],
            ]
        }
    });
}
exports.supportInfo = supportInfo;
